
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.FuncionarioScalarFieldEnum = {
  id: 'id',
  cpf: 'cpf',
  nome: 'nome',
  endereco: 'endereco',
  genero: 'genero',
  telefone: 'telefone',
  cargo: 'cargo',
  email: 'email',
  local: 'local',
  nivelAcesso: 'nivelAcesso',
  senhaHash: 'senhaHash',
  dataNascimento: 'dataNascimento',
  gerenteId: 'gerenteId'
};

exports.Prisma.ClienteScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  endereco: 'endereco',
  funcionarioId: 'funcionarioId',
  funilId: 'funilId'
};

exports.Prisma.Funil_VendasScalarFieldEnum = {
  id: 'id',
  estagioNome: 'estagioNome'
};

exports.Prisma.EventoScalarFieldEnum = {
  id: 'id',
  titulo: 'titulo',
  desc: 'desc',
  dataIni: 'dataIni',
  duracaoH: 'duracaoH',
  link: 'link',
  status: 'status',
  organizadorId: 'organizadorId'
};

exports.Prisma.ContatoClienteScalarFieldEnum = {
  id: 'id',
  tipoContato: 'tipoContato',
  valorContrato: 'valorContrato',
  clienteId: 'clienteId'
};

exports.Prisma.AgendamentoInteracaoScalarFieldEnum = {
  id: 'id',
  dataMarcada: 'dataMarcada',
  tipoInteracao: 'tipoInteracao',
  status: 'status',
  notas: 'notas',
  funcionarioId: 'funcionarioId',
  clienteId: 'clienteId'
};

exports.Prisma.HistoricoFunilScalarFieldEnum = {
  id: 'id',
  dataMovimentacao: 'dataMovimentacao',
  clienteId: 'clienteId',
  funilId: 'funilId'
};

exports.Prisma.InteracaoClienteScalarFieldEnum = {
  id: 'id',
  dataInteracao: 'dataInteracao',
  tipoInteracao: 'tipoInteracao',
  relatorioInteracao: 'relatorioInteracao',
  funcionarioId: 'funcionarioId',
  clienteId: 'clienteId'
};

exports.Prisma.VendaScalarFieldEnum = {
  id: 'id',
  dataVenda: 'dataVenda',
  total: 'total',
  funcionarioId: 'funcionarioId',
  clienteId: 'clienteId'
};

exports.Prisma.FuncionariosConvidadosScalarFieldEnum = {
  eventoId: 'eventoId',
  funcionarioId: 'funcionarioId'
};

exports.Prisma.NotificacaoScalarFieldEnum = {
  id: 'id',
  titulo: 'titulo',
  corpo: 'corpo',
  eventoId: 'eventoId'
};

exports.Prisma.NotificacaoConvidadosScalarFieldEnum = {
  eventoId: 'eventoId',
  funcionarioId: 'funcionarioId',
  notificacaoId: 'notificacaoId',
  statusLeitura: 'statusLeitura',
  dataLeitura: 'dataLeitura',
  prioridade: 'prioridade'
};

exports.Prisma.PresencaScalarFieldEnum = {
  id: 'id',
  presente: 'presente',
  razaoRecusa: 'razaoRecusa',
  dataTermino: 'dataTermino',
  linkFeedback: 'linkFeedback',
  eventoId: 'eventoId',
  funcionarioId: 'funcionarioId'
};

exports.Prisma.FormTemplateScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  descricao: 'descricao',
  estrutura: 'estrutura',
  criadoPorId: 'criadoPorId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CandidatoScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  dataNascimento: 'dataNascimento',
  genero: 'genero',
  telefone: 'telefone',
  cpf: 'cpf',
  estado: 'estado',
  cidade: 'cidade',
  bairro: 'bairro',
  rua: 'rua',
  numero: 'numero',
  cep: 'cep',
  complemento: 'complemento',
  email: 'email',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ArquivoCandidatoScalarFieldEnum = {
  id: 'id',
  nomeArquivo: 'nomeArquivo',
  campoOriginal: 'campoOriginal',
  candidatoId: 'candidatoId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.FuncionarioOrderByRelevanceFieldEnum = {
  cpf: 'cpf',
  nome: 'nome',
  endereco: 'endereco',
  genero: 'genero',
  telefone: 'telefone',
  cargo: 'cargo',
  email: 'email',
  local: 'local',
  nivelAcesso: 'nivelAcesso',
  senhaHash: 'senhaHash'
};

exports.Prisma.ClienteOrderByRelevanceFieldEnum = {
  nome: 'nome',
  endereco: 'endereco'
};

exports.Prisma.Funil_VendasOrderByRelevanceFieldEnum = {
  estagioNome: 'estagioNome'
};

exports.Prisma.EventoOrderByRelevanceFieldEnum = {
  titulo: 'titulo',
  desc: 'desc',
  link: 'link',
  status: 'status'
};

exports.Prisma.ContatoClienteOrderByRelevanceFieldEnum = {
  tipoContato: 'tipoContato',
  valorContrato: 'valorContrato'
};

exports.Prisma.AgendamentoInteracaoOrderByRelevanceFieldEnum = {
  tipoInteracao: 'tipoInteracao',
  status: 'status',
  notas: 'notas'
};

exports.Prisma.InteracaoClienteOrderByRelevanceFieldEnum = {
  tipoInteracao: 'tipoInteracao',
  relatorioInteracao: 'relatorioInteracao'
};

exports.Prisma.NotificacaoOrderByRelevanceFieldEnum = {
  titulo: 'titulo',
  corpo: 'corpo'
};

exports.Prisma.NotificacaoConvidadosOrderByRelevanceFieldEnum = {
  prioridade: 'prioridade'
};

exports.Prisma.PresencaOrderByRelevanceFieldEnum = {
  razaoRecusa: 'razaoRecusa',
  linkFeedback: 'linkFeedback'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.FormTemplateOrderByRelevanceFieldEnum = {
  nome: 'nome',
  descricao: 'descricao'
};

exports.Prisma.CandidatoOrderByRelevanceFieldEnum = {
  nome: 'nome',
  genero: 'genero',
  telefone: 'telefone',
  cpf: 'cpf',
  estado: 'estado',
  cidade: 'cidade',
  bairro: 'bairro',
  rua: 'rua',
  numero: 'numero',
  cep: 'cep',
  complemento: 'complemento',
  email: 'email',
  status: 'status'
};

exports.Prisma.ArquivoCandidatoOrderByRelevanceFieldEnum = {
  nomeArquivo: 'nomeArquivo',
  campoOriginal: 'campoOriginal'
};


exports.Prisma.ModelName = {
  Funcionario: 'Funcionario',
  Cliente: 'Cliente',
  Funil_Vendas: 'Funil_Vendas',
  Evento: 'Evento',
  ContatoCliente: 'ContatoCliente',
  AgendamentoInteracao: 'AgendamentoInteracao',
  HistoricoFunil: 'HistoricoFunil',
  InteracaoCliente: 'InteracaoCliente',
  Venda: 'Venda',
  FuncionariosConvidados: 'FuncionariosConvidados',
  Notificacao: 'Notificacao',
  NotificacaoConvidados: 'NotificacaoConvidados',
  Presenca: 'Presenca',
  FormTemplate: 'FormTemplate',
  Candidato: 'Candidato',
  ArquivoCandidato: 'ArquivoCandidato'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
